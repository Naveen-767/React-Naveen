skill section design 

// import React from 'react';
// import SectionTitle from '../components/SectionTitle';
// import SkillBar from '../components/SkillBar';
// import { skills } from '../data';

// const Skills: React.FC = () => {
//   // Split skills into two columns
//   const midPoint = Math.ceil(skills.length / 2);
//   const leftColumnSkills = skills.slice(0, midPoint);
//   const rightColumnSkills = skills.slice(midPoint);

//   return (
//     <section id="skills" className="py-20 bg-white dark:bg-gray-800">
//       <div className="container mx-auto px-6">
//         <SectionTitle title="Skills" />
        
//         <h3 className="text-xl font-semibold text-center text-gray-800 dark:text-white mb-8">
//           Professional Skills
//         </h3>
        
//         <div className="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-10">
//           <div className="space-y-4">
//             {leftColumnSkills.map((skill, index) => (
//               <SkillBar key={index} skill={skill} />
//             ))}
//           </div>
          
//           <div className="space-y-4">
//             {rightColumnSkills.map((skill, index) => (
//               <SkillBar key={index} skill={skill} />
//             ))}
//           </div>
//         </div>
//       </div>
//     </section>
//   );
// };

// export default Skills;



// // Skills.tsx
// import React, { useEffect, useRef, useState } from 'react';

// /* ------------------------------------------------------------------ */
// /* 1.  Type and data (brand colours + BoxIcons class names)            */
// /* ------------------------------------------------------------------ */
// type Skill = {
//   name: string;
//   icon: string;   // BoxIcons class (e.g. "bx bxl-react")
//   color: string;  // Brand hex
// };

// const skills: Skill[] = [
//   { name: 'HTML5',      icon: 'bx bxl-html5',         color: '#E34F26' },
//   { name: 'CSS3',       icon: 'bx bxl-css3',          color: '#1572B6' },
//   { name: 'JavaScript', icon: 'bx bxl-javascript',    color: '#F7DF1E' },
//   { name: 'React.js',   icon: 'bx bxl-react',         color: '#61DAFB' },
//   { name: 'GitHub',     icon: 'bx bxl-github',        color: '#181717' },
//   { name: 'Sass',       icon: 'bx bxl-sass',          color: '#CC6699' },
//   { name: 'Bootstrap',  icon: 'bx bxl-bootstrap',     color: '#7952B3' },
//   { name: 'Tailwind',   icon: 'bx bxl-tailwind-css',  color: '#06B6D4' },
//   { name: 'UX / UI',    icon: 'bx bxs-paint',         color: '#FF5722' },
//   { name: 'Figma',      icon: 'bx bxl-figma',         color: '#F24E1E' },
//   { name: 'MySQL',      icon: 'bx bxs-data',          color: '#00758F' },
// ];

// /* ------------------------------------------------------------------ */
// /* 2.  Single‑file SkillCard component (glass‑morphism)                */
// /* ------------------------------------------------------------------ */
// const SkillCard: React.FC<{ skill: Skill }> = ({ skill }) => {
//   const [show, setShow] = useState(false);
//   const ref = useRef<HTMLDivElement>(null);

//   // fade / scale in when the card first scrolls into view
//   useEffect(() => {
//     const obs = new IntersectionObserver(
//       ([entry]) => {
//         if (entry.isIntersecting) {
//           setShow(true);
//           obs.disconnect();
//         }
//       },
//       { threshold: 0.25 }
//     );
//     if (ref.current) obs.observe(ref.current);
//     return () => obs.disconnect();
//   }, []);

//   return (
//     <div
//       ref={ref}
//       className={`
//         relative overflow-hidden flex flex-col items-center justify-center
//         h-40 w-full sm:h-44 rounded-3xl p-6
//         transition-all duration-500
//         ${show ? 'opacity-100 scale-100' : 'opacity-0 scale-90'}
//         hover:scale-105 group
//         /* glassmorphism core */
//         bg-white/10 dark:bg-white/5 backdrop-blur-xl
//         border border-white/30 dark:border-white/10
//         shadow-lg shadow-black/20
//       `}
//     >
//       {/* soft glare on hover */}
//       <div className="pointer-events-none absolute inset-0 rounded-3xl bg-white/20 opacity-0 group-hover:opacity-5" />

//       {/* brand‑coloured icon */}
//       <i
//         className={`${skill.icon} text-5xl mb-3 drop-shadow-sm transition-transform duration-300 group-hover:-translate-y-1`}
//         style={{ color: skill.color }}
//       />

//       {/* brand‑coloured label */}
//       <span
//         className="text-base font-semibold tracking-wide select-none"
//         style={{ color: skill.color }}
//       >
//         {skill.name}
//       </span>
//     </div>
//   );
// };

// /* ------------------------------------------------------------------ */
// /* 3.  The page/section component                                      */
// /* ------------------------------------------------------------------ */
// const Skills: React.FC = () => {
//   return (
//     <section id="skills" className="py-20 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900">
//       <div className="container mx-auto px-6">
//         {/* simple heading (no external SectionTitle) */}
//         <h2 className="text-3xl sm:text-4xl font-extrabold text-center mb-2 text-gray-800 dark:text-white">
//           Skills
//         </h2>
//         <p className="text-center text-gray-600 dark:text-gray-300 mb-8">
//           Professional expertise &amp; toolset
//         </p>

//         {/* responsive grid: 2 ➜ 3 ➜ 5 columns */}
//         <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-6">
//           {skills.map((skill) => (
//             <SkillCard key={skill.name} skill={skill} />
//           ))}
//         </div>
//       </div>
//     </section>
//   );
// };

// export default Skills;




skill bar {
    import React, { useRef, useEffect, useState } from 'react';
import { SkillType } from '../types';

interface SkillBarProps {
  skill: SkillType;
}

const SkillBar: React.FC<SkillBarProps> = ({ skill }) => {
  const [animate, setAnimate] = useState(false);
  const barRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        const [entry] = entries;
        if (entry.isIntersecting) {
          setAnimate(true);
          observer.disconnect();
        }
      },
      { threshold: 0.1 }
    );

    if (barRef.current) {
      observer.observe(barRef.current);
    }

    return () => {
      observer.disconnect();
    };
  }, []);

  // Determine which animation class to use based on the icon
  const getAnimationClass = () => {
    if (skill.icon.includes('react')) return 'animate-spin-slow';
    if (skill.icon.includes('figma')) return 'animate-bounce-slow';
    return 'animate-pulse-slow';
  };

  return (
    <div 
      ref={barRef}
      className="relative flex items-center justify-between w-full p-4 mb-4 bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300"
    >
      <div className="flex items-center">
        <i className={`${skill.icon} ${getAnimationClass()} text-2xl mr-3 text-blue-600 dark:text-blue-400`}></i>
        <span className="font-medium text-gray-800 dark:text-white">{skill.name}</span>
      </div>
      <span className="text-sm font-semibold text-gray-700 dark:text-gray-300">{skill.percentage}%</span>
      
      <div className="absolute left-0 bottom-0 h-1 bg-gray-200 dark:bg-gray-700 w-full rounded-b-lg overflow-hidden">
        <div 
          className="h-full bg-blue-600 dark:bg-blue-500 rounded-b-lg transition-all duration-1000 ease-out"
          style={{ 
            width: animate ? `${skill.percentage}%` : '0%',
          }}
        ></div>
      </div>
    </div>
  );
};

export default SkillBar;
}



skill card design {
    // import React, { useRef, useEffect, useState } from 'react';
// import { SkillType } from '../types';

// interface SkillCardProps {
//   skill: SkillType;
// }

// const SkillCard: React.FC<SkillCardProps> = ({ skill }) => {
//   const cardRef = useRef<HTMLDivElement>(null);
//   const [visible, setVisible] = useState(false);

//   useEffect(() => {
//     const obs = new IntersectionObserver(
//       ([entry]) => {
//         if (entry.isIntersecting) {
//           setVisible(true);
//           obs.disconnect();
//         }
//       },
//       { threshold: 0.2 }
//     );
//     if (cardRef.current) obs.observe(cardRef.current);
//     return () => obs.disconnect();
//   }, []);

//   return (
//     <div
//       ref={cardRef}
//       className={`flex flex-col items-center justify-center p-6 rounded-xl shadow-md
//                   bg-white/80 dark:bg-gray-800/80 backdrop-blur
//                   transition transform duration-500
//                   ${visible ? 'scale-100 opacity-100' : 'scale-90 opacity-0'}
//                   hover:shadow-lg hover:-translate-y-1`}
//     >
//       {/* big icon */}
//       <i className={`${skill.icon} text-5xl text-blue-600 dark:text-blue-400 mb-3`}></i>
//       {/* medium text */}
//       <span className="text-lg font-medium text-gray-800 dark:text-gray-100 tracking-wide">
//         {skill.name}
//       </span>
//     </div>
//   );
// };

// export default SkillCard;
// import React, { useEffect, useRef, useState } from 'react';
// import { SkillType } from '../types';

// interface SkillCardProps {
//   skill: SkillType;
// }

// const SkillCard: React.FC<SkillCardProps> = ({ skill }) => {
//   const [visible, setVisible] = useState(false);
//   const cardRef = useRef<HTMLDivElement>(null);

//   /* fade / scale in when scrolled into view */
//   useEffect(() => {
//     const obs = new IntersectionObserver(
//       ([entry]) => {
//         if (entry.isIntersecting) {
//           setVisible(true);
//           obs.disconnect();
//         }
//       },
//       { threshold: 0.2 }
//     );
//     if (cardRef.current) obs.observe(cardRef.current);
//     return () => obs.disconnect();
//   }, []);

//   return (
//     <div
//       ref={cardRef}
//       /* wrapper gives us the gradient “border” */
//       className={`
//         relative p-[2px] rounded-2xl bg-animated-gradient
//         transition-transform duration-500
//         ${visible ? 'opacity-100 scale-100' : 'opacity-0 scale-90'}
//         hover:scale-105
//       `}
//     >
//       {/* inner panel */}
//       <div
//         className={`
//           flex flex-col items-center justify-center
//           bg-white/80 dark:bg-gray-900/80 backdrop-blur
//           rounded-2xl px-6 py-8 shadow-md
//           transition transform duration-500
//           group-hover:-rotate-1
//         `}
//       >
//         {/* LARGE icon with its own hover wiggle */}
//         <i
//           className={`
//             ${skill.icon}
//             text-5xl text-white drop-shadow-md mb-4
//             transition-transform duration-300
//             hover:scale-110 hover:-rotate-6
//           `}
//         />
//         <span className="text-lg font-semibold text-gray-800 dark:text-gray-100 tracking-wide">
//           {skill.name}
//         </span>
//       </div>
//     </div>
//   );
// };

// export default SkillCard;

// import React, { useEffect, useRef, useState } from 'react';
// import { SkillType } from '../types';

// interface SkillCardProps {
//   skill: SkillType;
// }

// const SkillCard: React.FC<SkillCardProps> = ({ skill }) => {
//   const [show, setShow] = useState(false);
//   const ref = useRef<HTMLDivElement>(null);

//   /*  Fade / scale in once on scroll  */
//   useEffect(() => {
//     const obs = new IntersectionObserver(
//       ([entry]) => {
//         if (entry.isIntersecting) {
//           setShow(true);
//           obs.disconnect();
//         }
//       },
//       { threshold: 0.25 }
//     );
//     if (ref.current) obs.observe(ref.current);
//     return () => obs.disconnect();
//   }, []);

//   return (
//     <div
//       ref={ref}
//       className={`
//         relative overflow-hidden
//         flex flex-col items-center justify-center
//         h-40 w-full sm:h-44
//         rounded-3xl p-6
//         transition-all duration-500
//         ${show ? 'opacity-100 scale-100' : 'opacity-0 scale-90'}
//         hover:scale-105
//         group
//         /* glass core */
//         bg-white/10 dark:bg-white/5
//         backdrop-blur-xl
//         border border-white/30 dark:border-white/10
//         shadow-lg shadow-black/20
//       `}
//     >
//       {/* subtle radial highlight */}
//       <div className="pointer-events-none absolute inset-0 rounded-3xl bg-white/20 opacity-0 group-hover:opacity-5" />

//       {/* ICON */}
//       <i
//         className={`
//           ${skill.icon}
//           text-5xl mb-3
//           text-white drop-shadow-sm
//           transition-transform duration-300
//           group-hover:-translate-y-1
//         `}
//       />

//       {/* NAME */}
//       <span className="text-base font-semibold text-white tracking-wide select-none">
//         {skill.name}
//       </span>
//     </div>
//   );
// };

// export default SkillCard;


/* SkillCard.tsx (glassmorphism version) */
// import React, { useEffect, useRef, useState } from 'react';
// import { SkillType } from '../types';

// interface SkillCardProps { skill: SkillType; }

// const SkillCard: React.FC<SkillCardProps> = ({ skill }) => {
//   const [show, setShow] = useState(false);
//   const ref = useRef<HTMLDivElement>(null);

//   useEffect(() => {
//     const obs = new IntersectionObserver(
//       ([entry]) => { if (entry.isIntersecting) { setShow(true); obs.disconnect(); } },
//       { threshold: 0.25 }
//     );
//     if (ref.current) obs.observe(ref.current);
//     return () => obs.disconnect();
//   }, []);

//   return (
//     <div
//       ref={ref}
//       className={`
//         relative overflow-hidden flex flex-col items-center justify-center
//         h-40 w-full sm:h-44 rounded-3xl p-6
//         transition-all duration-500
//         ${show ? 'opacity-100 scale-100' : 'opacity-0 scale-90'}
//         hover:scale-105 group
//         bg-white/10 dark:bg-white/5 backdrop-blur-xl
//         border border-white/30 dark:border-white/10
//         shadow-lg shadow-black/20
//       `}
//     >
//       {/* light glare */}
//       <div className="pointer-events-none absolute inset-0 rounded-3xl bg-white/20 opacity-0 group-hover:opacity-5" />

//       {/* ICON – coloured */}
//       <i
//         className={`${skill.icon} text-5xl mb-3 drop-shadow-sm transition-transform duration-300 group-hover:-translate-y-1`}
//         style={{ color: skill.color }}
//       />

//       {/* LABEL – coloured */}
//       <span
//         className="text-base font-semibold tracking-wide select-none"
//         style={{ color: skill.color }}
//       >
//         {skill.name}
//       </span>
//     </div>
//   );
// };

// export default SkillCard;
}

header{
    // import React from 'react';
// import { Menu } from 'lucide-react';

// interface HeaderProps {
//   toggleSidebar?: () => void;
// }

// const Header: React.FC<HeaderProps> = ({ toggleSidebar }) => {
//   return (
    
//     <header className="bg-white shadow-sm sticky top-0 z-10">
//       <div className="container mx-auto px-4 py-4 flex items-center justify-between">
//         <div className="flex items-center">
//           <button 
//             onClick={toggleSidebar}
//             className="mr-4 p-1 rounded hover:bg-gray-100 lg:hidden"
//             aria-label="Toggle sidebar"
//           >
//             <Menu size={24} />
//           </button>
//           <h1 className="text-xl font-bold text-gray-800">My Project</h1>
//         </div>
//         <nav>
//           <ul className="flex space-x-6">
//             <li><a href="#" className="text-gray-600 hover:text-blue-600 transition-colors">Home</a></li>
//             <li><a href="#" className="text-gray-600 hover:text-blue-600 transition-colors">About</a></li>
//             <li><a href="#" className="text-gray-600 hover:text-blue-600 transition-colors">Contact</a></li>
//           </ul>
//         </nav>
//       </div>
//     </header>
//   );
// };

// export default Header;
}


footer {
    // import React from 'react';
// import SocialIcons from './SocialIcons';

// const Footer: React.FC = () => {
//   const currentYear = new Date().getFullYear();
  
//   return (
//     <footer className="bg-blue-600 dark:bg-blue-800 text-white py-10">
//       <div className="container mx-auto px-6">
//         <div className="text-center">
//           <h2 className="text-3xl font-bold mb-6">Naveen G</h2>
          
//           <div className="mb-6">
//             <SocialIcons className="justify-center" iconSize="text-2xl" />
//           </div>
          
//           <div className="text-sm opacity-90">
//             <p>© {currentYear} All rights reserved</p>
//           </div>
//         </div>
//       </div>
//     </footer>
//   );
// };

// export default Footer;
}


project card {
  // // import React from 'react';
// // import { ProjectType } from '../types';

// // interface ProjectCardProps {
// //   project: ProjectType;
// // }

// // const ProjectCard: React.FC<ProjectCardProps> = ({ project }) => {
// //   return (
// //     <a 
// //       href={project.link} 
// //       target="_blank" 
// //       rel="noopener noreferrer" 
// //       className="block overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 bg-white dark:bg-gray-800"
// //     >
// //       <div className="relative overflow-hidden group h-48 sm:h-64">
// //         <img 
// //           src={project.image} 
// //           alt={project.title}
// //           className="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
// //         />
// //         <div className="absolute inset-0 bg-blue-600 bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
// //           <div className="text-white opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300">
// //             <span className="text-lg font-medium">{project.title}</span>
// //             <div className="mt-2 flex justify-center">
// //               <span className="px-4 py-2 rounded-full bg-white text-blue-600 text-sm font-medium">
// //                 View Project
// //               </span>
// //             </div>
// //           </div>
// //         </div>
// //       </div>
// //     </a>
// //   );
// // };

// // export default ProjectCard;
// import React from 'react';
// import { ProjectType } from '../types';
// import { motion } from 'framer-motion';

// interface ProjectCardProps {
//   project: ProjectType;
// }

// const cardVariants = {
//   hidden: { opacity: 0, y: 50 },
//   show: {
//     opacity: 1,
//     y: 0,
//     transition: { duration: 0.6, ease: 'easeOut' },
//   },
// };

// const ProjectCard: React.FC<ProjectCardProps> = ({ project }) => {
//   return (
//     <motion.a 
//       href={project.link} 
//       target="_blank" 
//       rel="noopener noreferrer"
//       variants={cardVariants}
//       whileHover={{ scale: 1.03 }}
//       className="block overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 bg-white dark:bg-gray-800"
//     >
//       <div className="relative overflow-hidden group h-48 sm:h-64">
//         <img 
//           src={project.image} 
//           alt={project.title}
//           className="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
//         />
//         <div className="absolute inset-0 bg-blue-600 bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
//           <div className="text-white opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300 text-center">
//             <span className="text-lg font-medium">{project.title}</span>
//             <div className="mt-2 flex justify-center">
//               <span className="px-4 py-2 rounded-full bg-white text-blue-600 text-sm font-medium">
//                 View Project
//               </span>
//             </div>
//           </div>
//         </div>
//       </div>
//     </motion.a>
//   );
// };

// // export default ProjectCard;
// import React from 'react';
// import { ProjectType } from '../types';
// import { motion } from 'framer-motion';

// interface ProjectCardProps {
//   project: ProjectType;
// }

// const cardVariants = {
//   hidden: { opacity: 0, y: 50 },
//   show: {
//     opacity: 1,
//     y: 0,
//     transition: {
//       duration: 0.6,
//       ease: [0.25, 0.1, 0.25, 1], // easeOut equivalent
//     },
//   },
// };

// const ProjectCard: React.FC<ProjectCardProps> = ({ project }) => {
//   return (
//     <motion.a 
//       href={project.link} 
//       target="_blank" 
//       rel="noopener noreferrer"
//       variants={cardVariants}
//       whileHover={{ scale: 1.03 }}
//       className="block overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 bg-white dark:bg-gray-800"
//     >
//       <div className="relative overflow-hidden group h-48 sm:h-64">
//         <img 
//           src={project.image} 
//           alt={project.title}
//           className="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
//         />
//         <div className="absolute inset-0 bg-blue-600 bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
//           <div className="text-white opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-300 text-center">
//             <span className="text-lg font-medium">{project.title}</span>
//             <div className="mt-2 flex justify-center">
//               <span className="px-4 py-2 rounded-full bg-white text-blue-600 text-sm font-medium">
//                 View Project
//               </span>
//             </div>
//           </div>
//         </div>
//       </div>
//     </motion.a>
//   );
// };

// export default ProjectCard;

// src/components/ProjectCard.tsx


// import { motion } from 'framer-motion';
// import type { FC } from 'react';
// import { ProjectType } from '../types';

// interface ProjectCardProps {
//   project: ProjectType;
// }

// const cardVariants = {
//   hidden: { opacity: 0, y: 50 },
//   show: {
//     opacity: 1,
//     y: 0,
//     transition: {
//       duration: 0.6,
//       ease: [0.25, 0.1, 0.25, 1], // cubic‑bezier ≈ easeOut
//     },
//   },
// };

// const ProjectCard: FC<ProjectCardProps> = ({ project }) => (
//   <motion.a
//     href={project.link}
//     target="_blank"
//     rel="noopener noreferrer"
//     variants={cardVariants}
//     whileHover={{ scale: 1.03 }}
//     className="block overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 bg-white dark:bg-gray-800"
//   >
//     <div className="relative group h-48 sm:h-64 overflow-hidden">
//       <img
//         src={project.image}
//         alt={project.title}
//         className="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
//       />
//       <div className="absolute inset-0 flex items-center justify-center
//                       bg-blue-600/0 group-hover:bg-blue-600/30 transition-all duration-300">
//         <div className="text-white opacity-0 group-hover:opacity-100
//                         translate-y-4 group-hover:translate-y-0 transition-all duration-300 text-center">
//           <span className="text-lg font-medium">{project.title}</span>
//           <div className="mt-2 flex justify-center">
//             <span className="px-4 py-2 rounded-full bg-white text-blue-600 text-sm font-medium">
//               View&nbsp;Project
//             </span>
//           </div>
//         </div>
//       </div>
//     </div>
//   </motion.a>
// );

// export default ProjectCard;
}

work {
  // // import React from 'react';
// // import SectionTitle from '../components/SectionTitle';
// // import ProjectCard from '../components/ProjectCard';
// // import { projects } from '../data';

// // const Work: React.FC = () => {
// //   return (
// //     <section id="work" className="py-20 bg-gray-50 dark:bg-gray-900">
// //       <div className="container mx-auto px-6">
// //         <SectionTitle title="My Work" />
        
// //         <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
// //           {projects.map((project, index) => (
// //             <ProjectCard key={index} project={project} />
// //           ))}
// //         </div>
        
// //         <div className="mt-12 text-center">
// //           <a 
// //             href="#contact" 
// //             className="inline-block px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors duration-300"
// //           >
// //             Want to work together? Contact me!
// //           </a>
// //         </div>
// //       </div>
// //     </section>
// //   );
// // };

// // export default Work;

// import React from 'react';
// import SectionTitle from '../components/SectionTitle';
// import ProjectCard from '../components/ProjectCard';
// import { projects } from '../data';
// import { motion } from 'framer-motion';

// const containerVariants = {
//   hidden: {},
//   show: {
//     transition: {
//       staggerChildren: 0.15,
//       delayChildren: 0.2,
//     },
//   },
// };

// const Work: React.FC = () => {
//   return (
//     <section id="work" className="py-20 bg-gray-50 dark:bg-gray-900">
//       <div className="container mx-auto px-6">
//         <motion.div
//           initial={{ opacity: 0, y: 40 }}
//           whileInView={{ opacity: 1, y: 0 }}
//           transition={{ duration: 0.6 }}
//           viewport={{ once: true }}
//         >
//           <SectionTitle title="My Work" />
//         </motion.div>

//         <motion.div
//           variants={containerVariants}
//           initial="hidden"
//           whileInView="show"
//           viewport={{ once: true, amount: 0.2 }}
//           className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6"
//         >
//           {projects.map((project, index) => (
//             <ProjectCard key={index} project={project} idx={index} />
//           ))}
//         </motion.div>

//         <motion.div
//           initial={{ opacity: 0, scale: 0.9 }}
//           whileInView={{ opacity: 1, scale: 1 }}
//           transition={{ delay: 0.3, duration: 0.5 }}
//           viewport={{ once: true }}
//           className="mt-12 text-center"
//         >
//           <a 
//             href="#contact" 
//             className="inline-block px-8 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors duration-300"
//           >
//             Want to work together? Contact me!
//           </a>
//         </motion.div>
//       </div>
//     </section>
//   );
// };

// export default Work;
}


skill{
  // import React, { useState, useEffect } from 'react';
// import DarkModeToggle from './DarkModeToggle';

// const navLinks = [
//   { href: '#home', label: 'Home' },
//   { href: '#about', label: 'About' },
//   { href: '#skills', label: 'Skills' },
//   { href: '#work', label: 'Work' },
//   { href: '#contact', label: 'Contact' }
// ];

// const Navbar: React.FC = () => {
//   const [isMenuOpen, setIsMenuOpen] = useState(false);
//   const [activeLink, setActiveLink] = useState('#home');
//   const [isScrolled, setIsScrolled] = useState(false);

//   useEffect(() => {
//     const handleScroll = () => {
//       // Update active section based on scroll position
//       const sections = document.querySelectorAll('section');
//       const scrollPosition = window.scrollY + 100; // Adding offset

//       sections.forEach(section => {
//         const sectionTop = section.offsetTop;
//         const sectionHeight = section.offsetHeight;
//         const sectionId = `#${section.id}`;

//         if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
//           setActiveLink(sectionId);
//         }
//       });

//       // Check if page is scrolled for navbar styling
//       setIsScrolled(window.scrollY > 10);
//     };

//     window.addEventListener('scroll', handleScroll);
//     return () => window.removeEventListener('scroll', handleScroll);
//   }, []);

//   const toggleMenu = () => {
//     setIsMenuOpen(!isMenuOpen);
//   };

//   return (
//     <header className={`fixed w-full top-0 left-0 z-50 transition-all duration-300 ${isScrolled ? 'bg-white dark:bg-gray-900 shadow-md' : 'bg-transparent'
//       }`}>
//       <nav className="container mx-auto px-6 py-4 flex justify-between items-center">
//         <div>
//           <a href="#home" className="text-xl font-semibold text-gray-900 dark:text-white">
//             Naveen G
//           </a>
//         </div>
//         <div className="flex items-center space-x-4">
//           <DarkModeToggle />

//           {/* Mobile menu button */}
//           <button
//             onClick={toggleMenu}
//             className="text-gray-800 dark:text-white lg:hidden focus:outline-none"
//             aria-label="Toggle menu"
//           >
//             <i className={`bx ${isMenuOpen ? 'bx-x' : 'bx-menu'} text-2xl`}></i>
//           </button>
//         </div>

//         {/* Desktop Navigation */}
//         <div className="hidden lg:block">
//           <ul className="flex space-x-8">
//             {navLinks.map((link) => (
//               <li key={link.href}>
//                 <a
//                   href={link.href}
//                   className={`relative pb-1 text-gray-800 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors ${activeLink === link.href ? 'font-semibold' : ''
//                     }`}
//                 >
//                   {link.label}
//                   {activeLink === link.href && (
//                     <span className="absolute bottom-0 left-0 w-full h-0.5 bg-blue-600 dark:bg-blue-400"></span>
//                   )}
//                 </a>
//               </li>
//             ))}
//           </ul>
//         </div>
//       </nav>

//       {/* Mobile Navigation */}
//       <div
//         className={`lg:hidden fixed inset-0 bg-gray-900 bg-opacity-50 z-40 transition-opacity duration-300 ${isMenuOpen ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'
//           }`}
//         onClick={toggleMenu}
//       ></div>

//       <div
//         className={`lg:hidden fixed top-0 right-0 h-full w-64 bg-white dark:bg-gray-800 z-50 transform transition-transform duration-300 ease-in-out shadow-xl ${isMenuOpen ? 'translate-x-0' : 'translate-x-full'
//           }`}
//       >
//         <div className="p-6">
//           <div className="flex justify-end">
//             <button
//               onClick={toggleMenu}
//               className="text-gray-800 dark:text-white focus:outline-none"
//               aria-label="Close menu"
//             >
//               <i className="bx bx-x text-2xl"></i>
//             </button>
//           </div>

//           <ul className="mt-8 space-y-6">
//             {navLinks.map((link) => (
//               <li key={link.href}>
//                 <a
//                   href={link.href}
//                   className={`block text-lg ${activeLink === link.href
//                       ? 'text-blue-600 dark:text-blue-400 font-semibold'
//                       : 'text-gray-800 dark:text-white'
//                     }`}
//                   onClick={toggleMenu}
//                 >
//                   {link.label}
//                 </a>
//               </li>
//             ))}
//           </ul>
//         </div>
//       </div>
//     </header>
//   );
// };

// export default Navbar;
}
